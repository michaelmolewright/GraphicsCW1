# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  x_stb_config = debug_x64
  x_glad_config = debug_x64
  x_glfw_config = debug_x64
  main_config = debug_x64
  draw2d_config = debug_x64
  support_config = debug_x64
  vmlib_config = debug_x64
  tests_line_config = debug_x64
  tests_triangle_config = debug_x64

else ifeq ($(config),release_x64)
  x_stb_config = release_x64
  x_glad_config = release_x64
  x_glfw_config = release_x64
  main_config = release_x64
  draw2d_config = release_x64
  support_config = release_x64
  vmlib_config = release_x64
  tests_line_config = release_x64
  tests_triangle_config = release_x64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := x-stb x-glad x-glfw main draw2d support vmlib tests-line tests-triangle

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

x-stb:
ifneq (,$(x_stb_config))
	@echo "==== Building x-stb ($(x_stb_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-stb.make config=$(x_stb_config)
endif

x-glad:
ifneq (,$(x_glad_config))
	@echo "==== Building x-glad ($(x_glad_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-glad.make config=$(x_glad_config)
endif

x-glfw:
ifneq (,$(x_glfw_config))
	@echo "==== Building x-glfw ($(x_glfw_config)) ===="
	@${MAKE} --no-print-directory -C third_party -f x-glfw.make config=$(x_glfw_config)
endif

main: vmlib support draw2d x-stb x-glad x-glfw
ifneq (,$(main_config))
	@echo "==== Building main ($(main_config)) ===="
	@${MAKE} --no-print-directory -C main -f Makefile config=$(main_config)
endif

draw2d:
ifneq (,$(draw2d_config))
	@echo "==== Building draw2d ($(draw2d_config)) ===="
	@${MAKE} --no-print-directory -C draw2d -f Makefile config=$(draw2d_config)
endif

support:
ifneq (,$(support_config))
	@echo "==== Building support ($(support_config)) ===="
	@${MAKE} --no-print-directory -C support -f Makefile config=$(support_config)
endif

vmlib:
ifneq (,$(vmlib_config))
	@echo "==== Building vmlib ($(vmlib_config)) ===="
	@${MAKE} --no-print-directory -C vmlib -f Makefile config=$(vmlib_config)
endif

tests-line: vmlib support draw2d x-stb x-glad x-glfw
ifneq (,$(tests_line_config))
	@echo "==== Building tests-line ($(tests_line_config)) ===="
	@${MAKE} --no-print-directory -C tests-line -f Makefile config=$(tests_line_config)
endif

tests-triangle: vmlib support draw2d x-stb x-glad x-glfw
ifneq (,$(tests_triangle_config))
	@echo "==== Building tests-triangle ($(tests_triangle_config)) ===="
	@${MAKE} --no-print-directory -C tests-triangle -f Makefile config=$(tests_triangle_config)
endif

clean:
	@${MAKE} --no-print-directory -C third_party -f x-stb.make clean
	@${MAKE} --no-print-directory -C third_party -f x-glad.make clean
	@${MAKE} --no-print-directory -C third_party -f x-glfw.make clean
	@${MAKE} --no-print-directory -C main -f Makefile clean
	@${MAKE} --no-print-directory -C draw2d -f Makefile clean
	@${MAKE} --no-print-directory -C support -f Makefile clean
	@${MAKE} --no-print-directory -C vmlib -f Makefile clean
	@${MAKE} --no-print-directory -C tests-line -f Makefile clean
	@${MAKE} --no-print-directory -C tests-triangle -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   x-stb"
	@echo "   x-glad"
	@echo "   x-glfw"
	@echo "   main"
	@echo "   draw2d"
	@echo "   support"
	@echo "   vmlib"
	@echo "   tests-line"
	@echo "   tests-triangle"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"